name: Deploy Glue Job

on:
  push:
    branches:
      - main
    paths:
      - 'scripts/Yelp-job.py'
      - '.github/workflows/deploy.yml'

jobs:
  deploy-glue-job:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1

    - name: Upload Glue script to S3
      run: |
        echo "Uploading Yelp-job.py to S3..."
        aws s3 cp scripts/Yelp-job.py s3://glue-script-github/glue-scripts/Yelp-job.py --acl public-read
        echo "Upload complete."

    - name: Start AWS Glue Job
      id: start_job
      run: |
        echo "Starting AWS Glue job..."
        JOB_RUN_ID=$(aws glue start-job-run --job-name Yelp-job --query 'JobRunId' --output text)
        echo "Glue JobRunId: $JOB_RUN_ID"
        echo "job_run_id=$JOB_RUN_ID" >> $GITHUB_OUTPUT

    - name: Wait for Glue Job to Finish
      run: |
        JOB_RUN_ID=${{ steps.start_job.outputs.job_run_id }}
        echo "Waiting for Glue job to finish..."

        while true; do
          STATUS=$(aws glue get-job-run --job-name Yelp-job --run-id $JOB_RUN_ID --query 'JobRun.JobRunState' --output text)
          echo "Current Glue Job Status: $STATUS"

          if [[ "$STATUS" == "SUCCEEDED" ]]; then
            echo "Glue job completed successfully!"
            break
          elif [[ "$STATUS" == "FAILED" || "$STATUS" == "STOPPED" || "$STATUS" == "TIMEOUT" ]]; then
            echo "Glue job failed with status: $STATUS"
            exit 1
          fi

          sleep 30
        done

    - name: Start Glue Crawler
      run: |
        echo "Starting Glue Crawler..."
        aws glue start-crawler --name new-crawler

    - name: Wait for Glue Crawler to Finish
      run: |
        echo "Waiting for Glue Crawler to finish..."

        while true; do
          STATE=$(aws glue get-crawler --name new-crawler --query 'Crawler.State' --output text)
          echo "Current Crawler State: $STATE"

          if [[ "$STATE" == "READY" ]]; then
            echo "Crawler completed successfully!"
            break
          fi

          sleep 15
        done